{"ast":null,"code":"export const loadGrid = (tickets, grouping, ordering, users) => {\n  let orderedTickets;\n  if (ordering === \"priority\") orderedTickets = orderByPriority(tickets);else orderedTickets = orderByTitle(tickets);\n  switch (grouping) {\n    case \"status\":\n      return groupTicketsByStatus(orderedTickets);\n    case \"priority\":\n      return groupTicketsByPriority(orderedTickets);\n    case \"user\":\n      return userMapGenerator(users, orderedTickets);\n    default:\n      return userMapGenerator(users, orderedTickets);\n  }\n};\nconst groupTicketsByStatus = tickets => {\n  const groups = tickets.reduce((map, obj) => {\n    if (!map[obj.status]) {\n      map[obj.status] = [];\n    }\n    map[obj.status].push(obj);\n    return map;\n  }, {\n    Backlog: [],\n    Todo: [],\n    \"In progress\": [],\n    Done: [],\n    Canceled: []\n  });\n  return groups;\n};\nexport const userMapGenerator = (users, tickets) => {\n  let map = {};\n  users.forEach(user => {\n    if (!map[user.name]) {\n      map[user.name] = [];\n    }\n    for (let index = 0; index < tickets.length; index++) {\n      if (tickets[index].userId === user.id) {\n        map[user.name].push(tickets[index]);\n      }\n    }\n  });\n  return map;\n};\nconst groupTicketsByUserId = tickets => {\n  const groups = tickets.reduce((map, obj) => {\n    if (!map[obj.id]) {\n      map[obj.id] = [];\n    }\n    map[obj.id].push(obj);\n    return map;\n  }, {\n    Backlog: [],\n    Todo: [],\n    \"In progress\": [],\n    Done: [],\n    Canceled: []\n  });\n  return groups;\n};\nconst groupTicketsByPriority = tickets => {\n  const groups = tickets.reduce((map, obj) => {\n    const priority = getPriotityLabel(obj.priority);\n    if (!map[priority]) {\n      map[priority] = [];\n    }\n    map[priority].push(obj);\n    return map;\n  }, {\n    \"No priority\": [],\n    Urgent: [],\n    Mdium: [],\n    High: [],\n    Low: []\n  });\n  return groups;\n};\nconst getPriotityLabel = priority => {\n  switch (priority) {\n    case 0:\n      return \"No priority\";\n    case 1:\n      return \"Low\";\n    case 2:\n      return \"Medium\";\n    case 3:\n      return \"High\";\n    case 4:\n      return \"Urgent\";\n    default:\n      return \"NA\";\n  }\n};\nconst orderByPriority = tickets => tickets.sort((a, b) => a.priority > b.priority ? -1 : 1);\nconst orderByTitle = tickets => tickets.sort((a, b) => a.title < b.title ? -1 : 1);","map":{"version":3,"names":["loadGrid","tickets","grouping","ordering","users","orderedTickets","orderByPriority","orderByTitle","groupTicketsByStatus","groupTicketsByPriority","userMapGenerator","groups","reduce","map","obj","status","push","Backlog","Todo","Done","Canceled","forEach","user","name","index","length","userId","id","groupTicketsByUserId","priority","getPriotityLabel","Urgent","Mdium","High","Low","sort","a","b","title"],"sources":["/Users/priyanshkashyap/Downloads/quicksell_assignment-main/src/utils/order_utils.js"],"sourcesContent":["export const loadGrid = (tickets, grouping, ordering,users) => {\r\n  let orderedTickets;\r\n  if (ordering === \"priority\") orderedTickets = orderByPriority(tickets);\r\n  else orderedTickets = orderByTitle(tickets);\r\n\r\n  switch (grouping) {\r\n    case \"status\":\r\n      return groupTicketsByStatus(orderedTickets);\r\n    case \"priority\":\r\n      return groupTicketsByPriority(orderedTickets);\r\n     case \"user\": return userMapGenerator(users,orderedTickets);\r\n    default:  return userMapGenerator(users,orderedTickets);\r\n  }\r\n};\r\n\r\nconst groupTicketsByStatus = (tickets) => {\r\n  const groups = tickets.reduce(\r\n    (map, obj) => {\r\n      if (!map[obj.status]) {\r\n        map[obj.status] = [];\r\n      }\r\n      map[obj.status].push(obj);\r\n      return map;\r\n    },\r\n    { Backlog: [], Todo: [], \"In progress\": [], Done: [], Canceled: [] }\r\n  );\r\n\r\n  return groups;\r\n};\r\n\r\nexport const userMapGenerator = (users, tickets) => {\r\n  let map = {};\r\n\r\n  users.forEach((user) => {\r\n    if (!map[user.name]) {\r\n      map[user.name] = [];\r\n    }\r\n\r\n    for (let index = 0; index < tickets.length; index++) {\r\n      if (tickets[index].userId === user.id) {\r\n        map[user.name].push(tickets[index]);\r\n      }\r\n    }\r\n  });\r\n\r\n  return map;\r\n};\r\n\r\nconst groupTicketsByUserId = (tickets) => {\r\n  const groups = tickets.reduce(\r\n    (map, obj) => {\r\n      if (!map[obj.id]) {\r\n        map[obj.id] = [];\r\n      }\r\n      map[obj.id].push(obj);\r\n      return map;\r\n    },\r\n    { Backlog: [], Todo: [], \"In progress\": [], Done: [], Canceled: [] }\r\n  );\r\n  return groups;\r\n};\r\n\r\nconst groupTicketsByPriority = (tickets) => {\r\n  const groups = tickets.reduce(\r\n    (map, obj) => {\r\n      const priority = getPriotityLabel(obj.priority);\r\n      if (!map[priority]) {\r\n        map[priority] = [];\r\n      }\r\n      map[priority].push(obj);\r\n      return map;\r\n    },\r\n    { \"No priority\": [], Urgent: [], Mdium: [], High: [], Low: [] }\r\n  );\r\n  return groups;\r\n};\r\n\r\nconst getPriotityLabel = (priority) => {\r\n  switch (priority) {\r\n    case 0:\r\n      return \"No priority\";\r\n    case 1:\r\n      return \"Low\";\r\n    case 2:\r\n      return \"Medium\";\r\n    case 3:\r\n      return \"High\";\r\n    case 4:\r\n      return \"Urgent\";\r\n    default:\r\n      return \"NA\";\r\n  }\r\n};\r\n\r\nconst orderByPriority = (tickets) =>\r\n  tickets.sort((a, b) => (a.priority > b.priority ? -1 : 1));\r\nconst orderByTitle = (tickets) =>\r\n  tickets.sort((a, b) => (a.title < b.title ? -1 : 1));\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}